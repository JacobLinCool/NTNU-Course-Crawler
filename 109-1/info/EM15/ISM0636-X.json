{
    "year": 109,
    "term": 1,
    "name": "社會科學程式設計",
    "teachers": [
        "柯皓仁"
    ],
    "department": "EM15",
    "code": "ISM0636",
    "credit": 3,
    "serial": 544,
    "group": "",
    "quota": {
        "limit": 50,
        "additional": 20
    },
    "schedule": [
        {
            "day": 1,
            "from": 6,
            "to": 8,
            "campus": "本部",
            "classroom": "正406"
        }
    ],
    "programs": [
        "學習與資訊學程",
        "數位人文與藝術學程"
    ],
    "comment": "",
    "restrict": "◎課程開放上修",
    "form_s": "",
    "classes": "",
    "dept_group": "",
    "hours": 3,
    "description": "隨著資訊科技進步，網際網路或科技媒介成為伴隨社會大眾生活中不可或缺的一部分。而社會科學領域亦意識到，以個體使用資訊技術所伴隨產生的資料作為研究材料，可用以分析或理解個體的行為與動機。因此，在進行相關研究時，資料處理與分析能力成為探索相關議題的決定性因素。\n\n本課程的著眼點現在雲端服務、巨量資料、開放性資料等逐漸受工商業與政府機關所重視，而資訊服務業亦逐漸成為產業的主流之一，然而本所學生與社會科學領域的研究生普遍缺乏資料分析的經驗與基本能力。因此，本課程欲簡化程式設計學習過程來作為學生分析資料能力的基礎，減少資訊原理、資料結構與演算法等方面的進階內容，改以新聞、訪談、BBS、社交網站等資料作為範例與案例探討，強調即學即用，以期提高本課程的實用性質，增進本所（或相關人文社會科學系所研究生）的資料分析能力，並與其研究或未來就業需求接軌。",
    "goals": [
        "讓社會科學領域之學習者具有基本程式設計能力",
        "瞭解如何使用程式進行統計、視覺化、以及資料分析",
        "透過案例教學，讓學習者不僅能夠理解，更能夠實用"
    ],
    "syllabus": "*   **課程簡介**\n\n隨著資訊科技進步，網際網路或科技媒介成為伴隨社會大眾生活中不可或缺的一部分。而社會科學領域亦意識到，以個體使用資訊技術所伴隨產生的資料作為研究材料，可用以分析或理解個體的行為與動機。因此，在進行相關研究時，資料處理與分析能力成為探索相關議題的決定性因素。本課程的著眼點現在雲端服務、巨量資料、開放性資料等逐漸受工商業與政府機關所重視，而資訊服務業亦逐漸成為產業的主流之一，然而本所學生與社會科學領域的研究生普遍缺乏資料分析的經驗與基本能力。因此，本課程欲簡化程式設計學習過程來作為學生分析資料能力的基礎，減少資訊原理、資料結構與演算法等方面的進階內容，改以新聞、訪談、BBS、社交網站等資料作為範例與案例探討，強調即學即用，以期提高本課程的實用性質，增進本所（或相關人文社會科學系所研究生）的資料分析能力，並與其研究或未來就業需求接軌。\n\n本課程主要為從沒寫過程式的人文社會科學學生開設，以Python為主要教授的程式語言，兼及基本演算法概念，內容涵蓋Python與程式設計的基本邏輯，包含變數、流程控制、函式、檔案讀取、網路資料擷取與處理、基本資料結構、資料庫、視覺化等內容。\n\n*   **課程目標**\n\n本課程目標在於讓社會科學領域的學習者習得下列知能：\n\n1.  認識計算機科學與演算法。\n2.  者具有基本程式設計能力。\n3.  熟悉Python程式語言的各項特性。\n4.  熟練應用Python程式語言於資料處理分析等問題解決。\n\n*   **課程適用對象**\n\n本門課的主要對象為**「沒有寫過程式」**的大學、碩、博士生，尤以有意識到⾃己需要處理⼤量資料或者想⾃行設計資料分析方法的人之學習者為佳。為了保持修課生學習成效的一致性，故有程式設計經驗盡量不要選修。如有特殊修課動機請於開學前告知授課教師。\n\n*   **授課方式**\n\n1.  講述法：自編教材於課堂講述。本課程上課活動以講述程式設計與邏輯思考為主。\n2.  實驗／實作：本課程十分著重學生的個人練習，因此每次上課將給予學生一簡要課題於課堂中確實練習，並包含八次以上的作業。\n3.  專題研究：學生需以其研究上所需要分析的資料作為專題題目，利用本課所教的方法與工具進行分析並提出具體成果。以達到本課程的「研究應用與實用」的目的。\n\n*   **課程大綱** \n\n1.  計算機科學與演算法概論\n2.  Python 作業環境介紹\n3.  變數、運算式、指令\n4.  條件指令\n5.  函式\n6.  迴圈\n7.  字串\n8.  檔案\n9.  基本資料結構：列表、字典、元組(tuple)\n10.  常規表示式\n11.  網路程式\n12.  資料庫與SQL\n13.  資料視覺化\n14.  進階議題：文字處理、機器學習",
    "methodologies": [
        {
            "type": "講述法",
            "note": "自編教材於課堂講述。本課程上課活動以講述程式設計與邏輯思考為主。"
        },
        {
            "type": "實驗/實作",
            "note": "本課程十分著重學生的個人練習，整學期將包含八次以上的作業。"
        },
        {
            "type": "專題研究",
            "note": "學生需以其研究上所需要分析的資料作為專題題目，利用本課所教的方法與工具進行分析並提出具體成果。以達到本課程的「研究應用與實用」的目的。"
        }
    ],
    "grading": [
        {
            "type": "作業",
            "weight": 40,
            "note": "程式設計課重在實作與練習，因此在課程中包含八次以上的程式作業以敦促學生進行練習。"
        },
        {
            "type": "期中考",
            "weight": 25,
            "note": "程式設計有部分需要內化的邏輯概念，可經由考試來進行驗收。考題將以填充與簡答為主，了解學生是否習得程式設計基本概念。"
        },
        {
            "type": "出席",
            "weight": 5,
            "note": "出缺席情形將做為最後評分參考。"
        },
        {
            "type": "專題",
            "weight": 30,
            "note": "包含在期中提出期末專題計畫，學生可利用其感興趣的資料，使用Python進行處理分析。"
        }
    ],
    "prerequisite": "",
    "general_core": []
}