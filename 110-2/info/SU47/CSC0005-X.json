{
    "year": 110,
    "term": 2,
    "name": "物件導向分析與設計",
    "teachers": [
        "林均翰"
    ],
    "department": "SU47",
    "code": "CSC0005",
    "type": "選",
    "grade": null,
    "credit": 3,
    "serial": 2945,
    "group": "",
    "quota": {
        "limit": 50,
        "additional": 10
    },
    "schedule": [
        {
            "day": 5,
            "from": 2,
            "to": 4,
            "campus": "公館",
            "classroom": "Ｂ101"
        }
    ],
    "programs": [],
    "comment": "",
    "restrict": "◎課程開放上修",
    "form_s": "",
    "classes": "9",
    "dept_group": "",
    "hours": 3,
    "description": "1. The Object Model \n2. Classes and Objects \n3. The Notation \n4. The Process\n5. Case Study: Weather Monitoring Station \n6. Midterm Exam \n7. Case Study: Foundation Class Library \n8. Case Study: Inventory Tracking \n9. Case Study: Cryptanalysis \n10. Case Study: Traffic Management \n11. Project Presentation \n12. Final Exam \n13. Project Demo & Final Report due",
    "goals": [
        "熟悉物件導向基礎概念和程式設計",
        "了解如何運用物件導向概念在系統設計",
        "對於物件導向概念在現有的系統上的影響",
        "學習物件導向概念在新一代系統(雲端系統)上的運用",
        "對於軟體著作權和開放原始碼(Open Source) 授權條款的了解"
    ],
    "syllabus": "【授課方式：16+2週】：彈性授課以數位學習、實作與專題、與自主學習等方式，於1~16週間之非課程時間進行。\n\n下列為暫定教學主題，進度視課程情況調整。\n\nPart 1 - An Introduction to Object-Oriented Software Development\n\nThe Object-Oriented Paradigm  \nThe UML - The Unified Modeling Language\n\n* * *\n\nPart 2 - The Limitations of Traditional Object-Oriented Design  \nA Problem That Cries Out for Flexible Code\n\nA Standard Object-Oriented Solution\n\n* * *\n\nPart 3 - Design Patterns  \nAn Introduction to Design Patterns  \nThe Facade Pattern  \nThe Adapter Pattern  \nExpanding Our Horizons  \nThe Strategy Pattern  \nThe Bridge Pattern  \nThe Abstract Factory Pattern\n\n* * *\n\nPart 4 - Putting It All Together - Thinking In Patterns  \nHow Do Experts Design?  \nSolving the CAD/CAM Problem with Patterns\n\n* * *\n\nPart 5 - Toward a New Paradigm of Design  \nThe Principles and Strategies of Design Patterns  \nCommonality and Variability Analysis  \nThe Analysis Matrix  \nThe Decorator Pattern\n\n* * *\n\nPart 6 - Other Values Of Patterns  \nThe Observer Pattern  \nThe Template Method Pattern\n\n* * *\n\nPart 7 - Factories  \nLessons from Design Patterns - Factories  \nThe Singleton Pattern and the Double-Checked Locking Pattern  \nThe Object Pool Pattern  \nThe Factory Method Pattern  \nSummary of Factories\n\n* * *\n\nPart 8 - Endings and Beginnings  \nDesign Patterns Reviewed - A Summation and a Beginning",
    "methodologies": [
        {
            "type": "講述法",
            "note": ""
        },
        {
            "type": "討論法",
            "note": ""
        },
        {
            "type": "問題解決教學",
            "note": ""
        },
        {
            "type": "合作學習",
            "note": ""
        },
        {
            "type": "專題研究",
            "note": ""
        }
    ],
    "grading": [
        {
            "type": "作業",
            "weight": 30,
            "note": ""
        },
        {
            "type": "報告",
            "weight": 30,
            "note": ""
        },
        {
            "type": "專題",
            "weight": 30,
            "note": ""
        },
        {
            "type": "其他",
            "weight": 10,
            "note": ""
        }
    ],
    "prerequisite": "",
    "general_core": []
}